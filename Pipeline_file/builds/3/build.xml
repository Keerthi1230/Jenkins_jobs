<?xml version='1.1' encoding='UTF-8'?>
<flow-build plugin="workflow-job@1472.ve4d5eca_143c4">
  <actions>
    <hudson.model.CauseAction>
      <causeBag class="linked-hash-map">
        <entry>
          <hudson.model.Cause_-UserIdCause>
            <userId>Keerthi1230</userId>
          </hudson.model.Cause_-UserIdCause>
          <int>1</int>
        </entry>
      </causeBag>
    </hudson.model.CauseAction>
    <jenkins.metrics.impl.TimeInQueueAction plugin="metrics@4.2.21-458.vcf496cb_839e4">
      <queuingDurationMillis>1</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>0</buildableDurationMillis>
      <waitingDurationMillis>0</waitingDurationMillis>
    </jenkins.metrics.impl.TimeInQueueAction>
    <org.jenkinsci.plugins.workflow.libs.LibrariesAction plugin="pipeline-groovy-lib@744.v5b_556ee7c253">
      <libraries/>
    </org.jenkinsci.plugins.workflow.libs.LibrariesAction>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction plugin="pipeline-model-definition@2.2218.v56d0cda_37c72">
      <stagesUUID>490753b7-23ff-4d4d-b59a-a9407240c812</stagesUUID>
      <pipelineDefs>
        <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef plugin="pipeline-model-api@2.2218.v56d0cda_37c72">
          <stages>
            <stages>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Create File</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">def directory = &quot;${WORKSPACE}/path/to/your/folder&quot;
                    def file = &quot;${directory}/hello.txt&quot;
                    
                    // Check if the directory exists, and create it if it doesn&apos;t
                    if (!fileExists(directory)) {
                        sh &quot;mkdir -p ${directory}&quot;
                        echo &quot;Directory created: ${directory}&quot;
                    }
                    
                    // Create the file with initial content
                    sh &quot;echo &apos;Hello, Jenkins!&apos; &gt; ${file}&quot;
                    echo &quot;File created with initial content&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Add Content</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">def file = &quot;${WORKSPACE}/path/to/your/folder/hello.txt&quot;
                    // Append new content to the file
                    sh &quot;echo &apos;This is added in stage 2.&apos; &gt;&gt; ${file}&quot;
                    echo &quot;Content added in Stage 2&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Append Line</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">def file = &quot;${WORKSPACE}/path/to/your/folder/hello.txt&quot;
                    // Append additional line
                    sh &quot;echo &apos;This is another line added in Stage 3.&apos; &gt;&gt; ${file}&quot;
                    echo &quot;Line added in Stage 3&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
                <name>Verify File Content</name>
                <branches>
                  <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                    <name>default</name>
                    <steps>
                      <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                        <name>script</name>
                        <args class="org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTNamedArgumentList">
                          <arguments class="linked-hash-map">
                            <entry>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                                <key>scriptBlock</key>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTKey>
                              <org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                                <value class="string">def file = &quot;${WORKSPACE}/path/to/your/folder/hello.txt&quot;
                    // Display the content of the file
                    sh &quot;cat ${file}&quot;
                    echo &quot;File content displayed&quot;</value>
                              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTValue_-ConstantValue>
                            </entry>
                          </arguments>
                        </args>
                      </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTScriptBlock>
                    </steps>
                  </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTBranch>
                </branches>
              </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTStage>
            </stages>
            <uuid>490753b7-23ff-4d4d-b59a-a9407240c812</uuid>
          </stages>
          <agent>
            <agentType>
              <key>any</key>
            </agentType>
          </agent>
        </org.jenkinsci.plugins.pipeline.modeldefinition.ast.ModelASTPipelineDef>
      </pipelineDefs>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.ExecutionModelAction>
    <org.jenkinsci.plugins.workflow.cps.EnvActionImpl plugin="workflow-cps@4002.v80ca_d0f47d7f">
      <env class="tree-map"/>
    </org.jenkinsci.plugins.workflow.cps.EnvActionImpl>
    <jenkins.metrics.impl.SubTaskTimeInQueueAction plugin="metrics@4.2.21-458.vcf496cb_839e4">
      <queuingDurationMillis>31</queuingDurationMillis>
      <blockedDurationMillis>0</blockedDurationMillis>
      <buildableDurationMillis>22</buildableDurationMillis>
      <waitingDurationMillis>8</waitingDurationMillis>
      <executingDurationMillis>1919</executingDurationMillis>
      <workUnitCount>1</workUnitCount>
    </jenkins.metrics.impl.SubTaskTimeInQueueAction>
  </actions>
  <queueId>7</queueId>
  <timestamp>1734679890773</timestamp>
  <startTime>1734679890778</startTime>
  <result>SUCCESS</result>
  <duration>2439</duration>
  <charset>UTF-8</charset>
  <keepLog>false</keepLog>
  <execution class="org.jenkinsci.plugins.workflow.cps.CpsFlowExecution">
    <result>SUCCESS</result>
    <script>pipeline {
    agent any
    stages {
        // Stage 1: Create the file
        stage(&apos;Create File&apos;) {
            steps {
                script {
                    // Define the directory and file name
                    def directory = &quot;${WORKSPACE}/path/to/your/folder&quot;
                    def file = &quot;${directory}/hello.txt&quot;
                    
                    // Check if the directory exists, and create it if it doesn&apos;t
                    if (!fileExists(directory)) {
                        sh &quot;mkdir -p ${directory}&quot;
                        echo &quot;Directory created: ${directory}&quot;
                    }
                    
                    // Create the file with initial content
                    sh &quot;echo &apos;Hello, Jenkins!&apos; &gt; ${file}&quot;
                    echo &quot;File created with initial content&quot;
                }
            }
        }
        
        // Stage 2: Add content to the file
        stage(&apos;Add Content&apos;) {
            steps {
                script {
                    def file = &quot;${WORKSPACE}/path/to/your/folder/hello.txt&quot;
                    // Append new content to the file
                    sh &quot;echo &apos;This is added in stage 2.&apos; &gt;&gt; ${file}&quot;
                    echo &quot;Content added in Stage 2&quot;
                }
            }
        }

        // Stage 3: Append another line to the file
        stage(&apos;Append Line&apos;) {
            steps {
                script {
                    def file = &quot;${WORKSPACE}/path/to/your/folder/hello.txt&quot;
                    // Append additional line
                    sh &quot;echo &apos;This is another line added in Stage 3.&apos; &gt;&gt; ${file}&quot;
                    echo &quot;Line added in Stage 3&quot;
                }
            }
        }

        // Optional: Stage to check the file content (for debugging purposes)
        stage(&apos;Verify File Content&apos;) {
            steps {
                script {
                    def file = &quot;${WORKSPACE}/path/to/your/folder/hello.txt&quot;
                    // Display the content of the file
                    sh &quot;cat ${file}&quot;
                    echo &quot;File content displayed&quot;
                }
            }
        }
    }
}
</script>
    <loadedScripts class="linked-hash-map"/>
    <durabilityHint>MAX_SURVIVABILITY</durabilityHint>
    <timings class="map">
      <entry>
        <string>flowNode</string>
        <long>367296656</long>
      </entry>
      <entry>
        <string>classLoad</string>
        <long>338494840</long>
      </entry>
      <entry>
        <string>runQueue</string>
        <long>1396634460</long>
      </entry>
      <entry>
        <string>run</string>
        <long>1315095159</long>
      </entry>
      <entry>
        <string>parse</string>
        <long>104131319</long>
      </entry>
      <entry>
        <string>saveProgram</string>
        <long>288501508</long>
      </entry>
    </timings>
    <internalCalls class="sorted-set"/>
    <sandbox>true</sandbox>
    <iota>48</iota>
    <head>1:48</head>
    <done>true</done>
    <resumeBlocked>false</resumeBlocked>
    <storageDir>workflow-completed</storageDir>
  </execution>
  <completed>true</completed>
  <checkouts class="hudson.util.PersistedList"/>
</flow-build>