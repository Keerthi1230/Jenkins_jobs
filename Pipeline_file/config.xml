<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1472.ve4d5eca_143c4">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2218.v56d0cda_37c72"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2218.v56d0cda_37c72">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@4002.v80ca_d0f47d7f">
    <script>pipeline {
    agent any

    stages {
        stage(&apos;Create File&apos;) {
            steps {
                script {
                    // Create a file in the workspace
                    writeFile(file: &apos;file.txt&apos;, text: &apos;This is the first file.&apos;)
                    echo &apos;File created in Create File stage.&apos;
                }
            }
        }

        stage(&apos;Build File&apos;) {
            steps {
                script {
                    // Simulate a build step (e.g., compiling or processing the file)
                    echo &apos;Building the file...&apos;
                    sh &apos;echo &quot;Building...&quot; &gt; build_output.txt&apos;
                    echo &apos;File built in Build File stage.&apos;
                }
            }
        }

        stage(&apos;Test File&apos;) {
            steps {
                script {
                    // Simulate testing the file
                    echo &apos;Testing the file...&apos;
                    sh &apos;echo &quot;Testing...&quot; &gt; test_output.txt&apos;
                    echo &apos;File tested in Test File stage.&apos;
                }
            }
        }

        stage(&apos;Deploy File&apos;) {
            steps {
                script {
                    // Simulate deployment of the file
                    echo &apos;Deploying the file...&apos;
                    sh &apos;echo &quot;Deploying...&quot; &gt; deploy_output.txt&apos;
                    echo &apos;File deployed in Deploy File stage.&apos;
                }
            }
        }
    }

    post {
        always {
            echo &apos;Pipeline completed.&apos;
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>